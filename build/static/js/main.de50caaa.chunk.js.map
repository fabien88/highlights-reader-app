{"version":3,"sources":["Highlights/thumbnail-downloader.js","Highlights/Thumbnail.js","Highlights/Clipping.js","Highlights/Clippings.js","Navigation.js","Elements/SnackBar.js","Settings/Section.js","Settings/ImportSection.js","Settings/clipping-parser.js","Settings/ResetSection.js","Elements/Switch.js","Settings/ShowBooksSection.js","Settings/ShuffleClippings.js","Settings/Settings.js","index.js"],"names":["limiter","Bottleneck","minTime","options","limit","type","alreadySearched","downloadThumbnail","thumbnails","title","author","callback","key","console","log","submit","books","search","error","results","thumbnail","EmptyThumbnail","react_default","a","createElement","className","Thumbnail","_ref","thumbnailUrl","alt","src","Thumbnail_EmptyThumbnail","Card","children","Header","_ref2","Title","_ref3","Author","_ref4","Separator","Content","_ref5","Location","_ref6","Clipping","nextProps","id","this","props","showThumbnail","_this$props","authors","content","loc","Clipping_Card","Clipping_Header","src_Highlights_Thumbnail","Clipping_Title","Clipping_Author","Clipping_Separator","Clipping_Content","Clipping_Location","split","Component","VirtualizeSwipeableViews","virtualize","SwipeableViews","Clippings","currentIndex","randomClippings","onChangeIndex","settings","clippingsToShow","randomSeed","filter","show","enableMouseEvents","resistance","slideCount","length","index","Math","max","slideRenderer","_clippingsToShow$inde","src_Highlights_Clipping","Navigation","currentView","setCurrentView","BottomNavigation","value","onChange","event","showLabels","BottomNavigationAction","label","icon","ImportContacts_default","Favorite_default","Settings_default","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","useStyles1","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","MySnackbarContentWrapper","classes","onClose","variant","other","onCloseButtonClick","Object","objectWithoutProperties","Icon","SnackbarContent","assign","clsx","aria-describedby","action","IconButton","aria-label","color","onClick","Close_default","useStyles","root","padding","margin","PaperSheet","header","Paper","Typography","component","button","rightIcon","marginBottom","marginLeft","iconSmall","ImportSection","setSettings","setState","updateThumbnails","isShowUploadSuccessfull","Button","htmlFor","Publish_default","file","target","files","reader","FileReader","addEventListener","clippings","transformQuotes","parseClippings","result","booksTitle","map","bookDict","reduce","acc","_i","_arr","toConsumableArray","Set","bookTitle","computeBookList","random","sort","b","_objectSpread","_loop","book","_Object$values","_i2","values","readAsText","SnackBar","ResetSection","resetState","DeleteForever_default","IOSSwitch","withStyles","width","height","justifyContent","switchBase","&$checked","transform","common","white","& + $track","border","&$focusVisible $thumb","thumb","track","borderRadius","concat","grey","transition","transitions","create","checked","focusVisible","Switch","focusVisibleClassName","disableRipple","CustomizedSwitches","FormControlLabel","style","control","labelPlacement","alphaSort","nameA","toLowerCase","nameB","Book","ShowBooksSection","_ref2$books","ShowBooksSection_Book","bookSetting","updatedBookSetting","ShowBooksSection_objectSpread","updatedBook","defineProperty","defaultState","Settings","_ref$settings","newSettings","Settings_objectSpread","_settings$books","Settings_ImportSection","ShuffleClippings","src_Settings_ShowBooksSection","Settings_ResetSection","require","install","factoryState","initialState","src_objectSpread","ls","get","reducer","state","nextState","args","setTimeout","set","rootElement","document","getElementById","ReactDOM","render","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","src_Settings_Settings","src_Highlights_Clippings","src_Navigation_0"],"mappings":"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","file":"static/js/main.de50caaa.chunk.js","sourcesContent":["import books from \"google-books-search\";\nimport Bottleneck from \"bottleneck\";\nconst limiter = new Bottleneck({\n  minTime: 500\n});\nconst options = {\n  // key: \"YOUR API KEY\",\n  // field: 'title',\n  // offset: 0,\n  limit: 1,\n  type: \"books\"\n  // order: 'relevance',\n  // lang: 'en'\n};\n\nconst alreadySearched = {};\n\nexport const downloadThumbnail = (thumbnails, title, author, callback) => {\n  const key = title + \"->\" + author;\n  if (alreadySearched[key] || thumbnails[key]) {\n    return;\n  }\n  alreadySearched[key] = true;\n  console.log(\"Searching for \" + key);\n\n  limiter.submit(books.search, title + \" \" + author, options, function(\n    error,\n    results\n  ) {\n    if (!error) {\n      // console.log(results);\n      callback(results[0].thumbnail);\n    } else {\n      //console.log(error);\n    }\n  });\n};\n","import React from \"react\";\nimport { downloadThumbnail } from \"./thumbnail-downloader\";\n\nimport \"./Thumbnail.scss\";\n\nconst EmptyThumbnail = () => <div className=\"emptyThumbnail\" />;\n\nconst Thumbnail = ({ title, author, thumbnailUrl }) => {\n  if (!thumbnailUrl) {\n    return <EmptyThumbnail />;\n  }\n  return <img className=\"thumbnail\" alt=\"thumb\" src={thumbnailUrl} />;\n};\n\nexport default Thumbnail;\n","import React, { Component } from \"react\";\nimport Thumbnail from \"./Thumbnail\";\nimport \"./Clipping.scss\";\n\nconst Card = ({ children }) => <div className=\"clipping\">{children}</div>;\nconst Header = ({ children }) => <div className=\"header\">{children}</div>;\nconst Title = ({ children }) => <span className=\"title\">{children}</span>;\nconst Author = ({ children }) => <span className=\"author\">by {children}</span>;\n\nconst Separator = () => <div className=\"separator\" />;\n\nconst Content = ({ children }) => <div className=\"content\">{children}</div>;\nconst Location = ({ children }) => (\n  <span className=\"location\">(Location {children})</span>\n);\n\nclass Clipping extends Component {\n  shouldComponentUpdate(nextProps) {\n    return !(\n      nextProps.id === this.props.id &&\n      nextProps.showThumbnail === this.props.showThumbnail\n    );\n  }\n\n  render() {\n    const {\n      thumbnailUrl,\n      showThumbnail,\n      title,\n      authors,\n      content,\n      loc\n    } = this.props;\n    return (\n      <Card>\n        <Header>\n          <Thumbnail\n            thumbnailUrl={thumbnailUrl}\n            title={title}\n            author={authors[0]}\n          />\n          <Title>\n            {title}\n            <Author>{authors[0]}</Author>\n          </Title>\n          <Separator />\n        </Header>\n        <Content>\n          {content}\n          <Location>{loc.split(\"-\")[0]}</Location>\n        </Content>\n      </Card>\n    );\n  }\n}\nexport default Clipping;\n","import React, { Fragment } from \"react\";\nimport Clipping from \"./Clipping\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { virtualize } from 'react-swipeable-views-utils';\nimport \"./Clippings.scss\";\n\nconst VirtualizeSwipeableViews = virtualize(SwipeableViews);\n\nconst Clippings = ({\n  thumbnails,\n  currentIndex,\n  randomClippings,\n  onChangeIndex,\n  settings\n}) => {\n  const { books, randomSeed = 0 } = settings;\n  const clippingsToShow = randomClippings.filter(\n    ({ title }) => books[title].show\n  );\n\n  const slideRenderer = ({ key, index }) => {\n    if (index < 0 || index > clippingsToShow.length - 1) {\n      return null\n    }\n    const { title, authors, content, loc } = clippingsToShow[index];\n\n    return (\n      <Clipping\n        id={index}\n        key={index}\n        //showThumbnail={shouldLoadThumbnail(index, currentIndex)}\n        thumbnailUrl={thumbnails[title + \"->\" + authors[0]]}\n        title={title}\n        authors={authors}\n        content={content}\n        loc={loc}\n      />\n    )\n  };\n  return (\n    <VirtualizeSwipeableViews\n      enableMouseEvents\n      resistance\n      slideCount={clippingsToShow.length}\n      onChangeIndex={onChangeIndex}\n      index={Math.max(0, currentIndex)}\n      slideRenderer={slideRenderer}\n    />\n  );\n};\nexport default Clippings;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport ImportContactsIcon from \"@material-ui/icons/ImportContacts\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\n\nimport \"./Navigation.scss\";\n\nconst Navigation = ({ currentView, setCurrentView }) => (\n  <BottomNavigation\n    value={currentView}\n    onChange={(event, currentView) => {\n      setCurrentView(currentView);\n    }}\n    showLabels\n    className=\"navigation\"\n  >\n    <BottomNavigationAction\n      label=\"Surlignements\"\n      icon={<ImportContactsIcon />}\n      value=\"highlights\"\n    />\n    <BottomNavigationAction\n      label=\"Favoris\"\n      value=\"favorite\"\n      icon={<FavoriteIcon />}\n    />\n    <BottomNavigationAction\n      label=\"Réglages\"\n      value=\"settings\"\n      icon={<SettingsIcon />}\n    />\n  </BottomNavigation>\n);\n\nexport default Navigation;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport Button from \"@material-ui/core/Button\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { amber, green } from \"@material-ui/core/colors\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nconst useStyles1 = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n}));\n\nfunction MySnackbarContentWrapper(props) {\n  const classes = useStyles1();\n  const {\n    className,\n    message,\n    onClose,\n    variant,\n    onCloseButtonClick,\n    ...other\n  } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"close\"\n          color=\"inherit\"\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf([\"error\", \"info\", \"success\", \"warning\"]).isRequired\n};\n\nexport default MySnackbarContentWrapper;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n    margin: theme.spacing(1)\n  }\n}));\n\nexport default function PaperSheet({ header, children }) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Paper className={classes.root}>\n        <Typography variant=\"h5\" component=\"h3\">\n          {header}\n        </Typography>\n        <Typography component=\"div\">{children}</Typography>\n      </Paper>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { parseClippings } from \"./clipping-parser\";\nimport \"./Settings.scss\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snackbar from \"../Elements/SnackBar\";\nimport Section from \"./Section\";\nimport { downloadThumbnail } from \"../Highlights/thumbnail-downloader\";\n\nconst shuffleArray = arr =>\n  arr\n    .map(a => [Math.random(), a])\n    .sort((a, b) => a[0] - b[0])\n    .map(a => a[1]);\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  rightIcon: {\n    marginBottom: -7,\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst defaultState = {\n  isShowUploadSuccessfull: false\n};\n\nconst ImportSection = ({\n  setSettings,\n  setState,\n  settings,\n  thumbnails,\n  updateThumbnails\n}) => {\n  const { isShowUploadSuccessfull } = settings;\n  const hideUploadSuccessFullMessage = () =>\n    setState({ settings: { ...settings, isShowUploadSuccessfull: false } });\n  console.log({ isShowUploadSuccessfull });\n\n  const classes = useStyles();\n\n  const computeBookList = clippings => {\n    var booksTitle = clippings.map(({ title }) => title);\n    var bookDict = clippings.reduce((acc, { title, authors }) => {\n      acc[title] = { title, author: authors[0] };\n      return acc;\n    }, {});\n\n    const books = {};\n    for (let bookTitle of [...new Set(booksTitle)]) {\n      books[bookTitle] = {\n        title: bookTitle,\n        author: bookDict[bookTitle].author,\n        show: true\n      };\n    }\n    return books;\n  };\n\n  const onFileUpload = event => {\n    var files = event.target.files;\n    var file = files[0];\n    var reader = new FileReader();\n    reader.addEventListener(\"load\", function(event) {\n      var text = event.target.result;\n      const clippings = parseClippings(text);\n      const books = computeBookList(clippings);\n      const randomClippings = shuffleArray(clippings);\n\n      setState({\n        clippings,\n        randomClippings,\n        settings: {\n          ...settings,\n          books,\n          isShowUploadSuccessfull: true\n        },\n        currentIndex: 0\n      });\n\n      // Download all thumbnails\n      for (let book of Object.values(books)) {\n        const { title, author } = book;\n        const key = title + \"->\" + author;\n        downloadThumbnail(thumbnails, title, author, thumbnailUrl => {\n          updateThumbnails(key, thumbnailUrl);\n        });\n      }\n    });\n    reader.readAsText(file);\n  };\n  return (\n    <Section header=\"Import des Clippings\">\n      <form>\n        <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n          <label htmlFor=\"fileupload\">\n            Charger le fichier \"My Clippings.txt\"\n            <PublishIcon className={classes.rightIcon} />\n          </label>\n        </Button>\n\n        <input\n          className=\"inputFile\"\n          id=\"fileupload\"\n          type=\"file\"\n          onChange={onFileUpload}\n        />\n      </form>\n      {isShowUploadSuccessfull && (\n        <Snackbar\n          variant=\"success\"\n          className={classes.margin}\n          message=\"Import réussi !\"\n          onClose={hideUploadSuccessFullMessage}\n        />\n      )}\n    </Section>\n  );\n};\nexport default ImportSection;\n","import transformQuotes from \"@fabien88/kindlequotes\";\n\nexport const fetchClippings = callback => {\n  fetch(\"/My Clippings.txt\")\n    //.then(r => r.text())\n    .then(response => response.arrayBuffer())\n    .then(buffer => {\n      let decoder = new TextDecoder(\"utf-8\");\n      let text = decoder.decode(buffer);\n      console.log({ text });\n      const quotes = transformQuotes(text, \"fr\");\n      callback(quotes);\n      console.log(quotes);\n    });\n};\n\n\nexport const parseClippings = (clippings) => {\n  const quotes = transformQuotes(clippings, \"fr\");\n  return quotes;\n}","import React, { useState } from \"react\";\n\nimport \"./Settings.scss\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Section from \"./Section\";\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst ResetSection = ({ resetState }) => {\n  const classes = useStyles();\n\n  return (\n    <Section header=\"Réinitialiser l'application\">\n      <Button\n        onClick={resetState}\n        variant=\"contained\"\n        color=\"secondary\"\n        className={classes.button}\n      >\n        Réinitialiser tous les réglages\n        <DeleteForeverIcon className={classes.rightIcon} />\n      </Button>\n    </Section>\n  );\n};\nexport default ResetSection;\n","import React from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst IOSSwitch = withStyles(theme => ({\n  root: {\n    width: 42,\n    height: 29,\n    padding: 0,\n    margin: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(16px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#52d869\",\n        opacity: 1,\n        border: \"none\",\n        height: 26\n      }\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#52d869\",\n      border: \"6px solid #fff\"\n    }\n  },\n  thumb: {\n    width: 24,\n    height: 24\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    height: 25,\n    transition: theme.transitions.create([\"background-color\", \"border\"])\n  },\n  checked: {},\n  focusVisible: {}\n}))(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked\n      }}\n      {...props}\n    />\n  );\n});\n\nconst useStyles = makeStyles(theme => ({\n  label: {\n    width: \"100%\"\n  }\n}));\n\nexport default function CustomizedSwitches({ checked, onChange, label }) {\n  const classes = useStyles();\n  return (\n    <FormControlLabel\n      style={{ width: \"100%\" }}\n      control={\n        <IOSSwitch\n          checked={checked}\n          onChange={() => onChange(!checked)}\n          value=\"checkedB\"\n        />\n      }\n      labelPlacement=\"start\"\n      label={label}\n      classes={{\n        label: classes.label\n      }}\n    />\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { parseClippings } from \"./clipping-parser\";\nimport \"./Settings.scss\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"../Elements/Switch\";\nimport Section from \"./Section\";\nimport Thumbnail from \"../Highlights/Thumbnail\";\n\nimport \"./ShowBooksSection.scss\";\nconst alphaSort = (a, b) => {\n  var nameA = a.title.toLowerCase(),\n    nameB = b.title.toLowerCase();\n  if (nameA < nameB)\n    //sort string ascending\n    return -1;\n  if (nameA > nameB) return 1;\n  return 0; //default return value (no sorting)\n};\n\nconst Book = ({ title, author, thumbnailUrl }) => {\n  return (\n    <div>\n      <Thumbnail title={title} author={author} thumbnailUrl={thumbnailUrl} />\n      <div className=\"title\">{title}</div>\n    </div>\n  );\n};\n\nconst ShowBooksSection = ({ books = {}, setSettings, thumbnails }) => {\n  const onChange = (title, bookSetting) => show => {\n    const updatedBookSetting = { ...bookSetting, show };\n    const updatedBook = { [title]: updatedBookSetting };\n    setSettings({ books: { ...books, ...updatedBook } });\n  };\n  return (\n    <Section header=\"Livres affichés\">\n      {Object.values(books)\n        .sort(alphaSort)\n        .map(book => (\n          <Switch\n            key={book.title}\n            checked={book.show}\n            label={\n              <Book\n                title={book.title}\n                author={book.author}\n                thumbnailUrl={thumbnails[book.title + \"->\" + book.author]}\n              />\n            }\n            onChange={onChange(book.title, book)}\n          />\n        ))}\n    </Section>\n  );\n};\nexport default ShowBooksSection;\n","import React, { useState } from \"react\";\n\nimport { parseClippings } from \"./clipping-parser\";\nimport \"./Settings.scss\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snackbar from \"../Elements/SnackBar\";\nimport Section from \"./Section\";\nimport { downloadThumbnail } from \"../Highlights/thumbnail-downloader\";\n\nconst shuffleArray = arr =>\n  arr\n    .map(a => [Math.random(), a])\n    .sort((a, b) => a[0] - b[0])\n    .map(a => a[1]);\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  rightIcon: {\n    marginBottom: -7,\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst defaultState = {\n  isShowUploadSuccessfull: false\n};\n\nconst ImportSection = ({ clippings, setState }) => {\n  const classes = useStyles();\n\n  const shuffleClippings = event => {\n    const randomClippings = shuffleArray(clippings);\n\n    setState({\n      randomClippings,\n      currentIndex: 0,\n      currentView: \"highlights\"\n    });\n  };\n  return (\n    <Section header=\"Surlignements aléatoires\">\n      <Button\n        onClick={shuffleClippings}\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n      >\n        Voir les surlignements en aléatoire\n      </Button>\n    </Section>\n  );\n};\nexport default ImportSection;\n","import React from \"react\";\n\nimport \"./Settings.scss\";\nimport ImportSection from \"./ImportSection\";\nimport ResetSection from \"./ResetSection\";\nimport ShowBooksSection from \"./ShowBooksSection\";\nimport ShuffleClippings from \"./ShuffleClippings\";\nimport { downloadThumbnail } from \"../Highlights/thumbnail-downloader\";\n\nconst defaultState = {\n  isShowUploadSuccessfull: false\n};\n\nconst Settings = ({\n  setState,\n  resetState,\n  settings = defaultState,\n  thumbnails,\n  updateThumbnails,\n  clippings\n}) => {\n  const setSettings = newSettings => {\n    setState({ settings: { ...settings, ...newSettings } });\n  };\n  const { books = {} } = settings;\n  // Download all thumbnails\n  for (let book of Object.values(books)) {\n    const { title, author } = book;\n    const key = title + \"->\" + author;\n    downloadThumbnail(thumbnails, title, author, thumbnailUrl => {\n      updateThumbnails(key, thumbnailUrl);\n    });\n  }\n  return (\n    <div className=\"settings\">\n      <h1>Réglages</h1>\n      <ImportSection\n        settings={settings}\n        setState={setState}\n        setSettings={setSettings}\n        updateThumbnails={updateThumbnails}\n        thumbnails={thumbnails}\n      />\n      <ShuffleClippings clippings={clippings} setState={setState} />\n      <ShowBooksSection\n        books={books}\n        setSettings={setSettings}\n        thumbnails={thumbnails}\n      />\n      <ResetSection resetState={resetState} />\n    </div>\n  );\n};\n\nexport default Settings;\n","import React, { useReducer } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ls from \"local-storage\";\n\nimport \"./styles.scss\";\nimport Clippings from \"./Highlights/Clippings\";\nimport Navigation from \"./Navigation\";\nimport Settings from \"./Settings/Settings\";\nrequire('offline-plugin/runtime').install();\nconst factoryState = {\n  clippings: [],\n  randomClippings: [],\n  currentIndex: 0,\n  thumbnails: {},\n  currentView: \"highlights\",\n\n  settings: { books: {}, randomSeed: 0 }\n};\n\nconst initialState = {\n  ...factoryState,\n  ...ls.get(\"state\")\n};\n\nfunction reducer(state, action) {\n  let nextState = { ...state };\n  switch (action.type) {\n    case \"resetState\":\n      nextState = factoryState;\n      break;\n    case \"setState\":\n      nextState = { ...nextState, ...action.args };\n      break;\n    case \"setThumbnail\":\n      nextState = {\n        ...nextState,\n        thumbnails: { ...state.thumbnails, [action.key]: action.thumbnailUrl }\n      };\n      break;\n    default:\n    // console.log({ nextState });\n  }\n  setTimeout(() => ls.set(\"state\", nextState), 500);\n  return nextState;\n}\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const {\n    clippings,\n    randomClippings,\n    currentIndex,\n    thumbnails,\n    currentView\n  } = state;\n  const setState = args => {\n    dispatch({ type: \"setState\", args });\n  };\n\n  const onChangeIndex = currentIndex => {\n    console.log({ currentIndex })\n    setState({ currentIndex });\n  };\n\n  const resetState = () => {\n    console.log(\"state reset\");\n    dispatch({ type: \"resetState\" });\n  };\n  const updateThumbnails = (key, thumbnailUrl) => {\n    dispatch({ type: \"setThumbnail\", key, thumbnailUrl });\n  };\n\n  const View = () => {\n    switch (currentView) {\n      case \"settings\":\n        return (\n          <Settings\n            setState={setState}\n            resetState={resetState}\n            settings={state.settings}\n            clippings={state.clippings}\n            thumbnails={thumbnails}\n            updateThumbnails={updateThumbnails}\n            clippings={clippings}\n          />\n        );\n\n      case \"highlights\":\n        return (\n          <Clippings\n            thumbnails={thumbnails}\n            randomClippings={randomClippings}\n            currentIndex={currentIndex}\n            updateThumbnails={updateThumbnails}\n            onChangeIndex={onChangeIndex}\n            settings={state.settings}\n          />\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {/* <Banner onFileUpload={onFileUpload} /> */}\n      <div className=\"view\">\n        <View />\n      </div>\n      <Navigation\n        currentView={currentView}\n        setCurrentView={currentView => setState({ currentView })}\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}