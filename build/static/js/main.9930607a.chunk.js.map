{"version":3,"sources":["serviceWorker.js","Highlights/thumbnail-downloader.js","Highlights/Thumbnail.js","Highlights/Clipping.js","Highlights/Clippings.js","Navigation.js","Elements/SnackBar.js","Settings/Section.js","Settings/ImportSection.js","Settings/clipping-parser.js","Settings/ResetSection.js","Elements/Switch.js","Settings/ShowBooksSection.js","Settings/ShuffleClippings.js","Settings/ReloadAppButton.js","Settings/Settings.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","limiter","Bottleneck","minTime","options","limit","type","alreadySearched","downloadThumbnail","thumbnails","title","author","callback","key","submit","books","search","results","thumbnail","EmptyThumbnail","react_default","a","createElement","className","Thumbnail","_ref","thumbnailUrl","alt","src","Thumbnail_EmptyThumbnail","Card","children","Header","_ref2","Title","_ref3","Favorite","_ref4","active","onClick","Favorite_default","style","color","FavoriteBorder_default","Author","_ref5","Separator","Content","_ref6","Location","_ref7","Clipping","nextProps","id","this","props","showThumbnail","_this$props","authors","content","loc","toggleFavorite","isInFavorite","Clipping_Card","Clipping_Header","src_Highlights_Thumbnail","Clipping_Title","Clipping_Author","Clipping_Favorite","Clipping_Separator","Clipping_Content","Clipping_Location","split","Component","VirtualizeSwipeableViews","virtualize","SwipeableViews","Clippings","currentIndex","randomClippings","onChangeIndex","settings","favorites","showOnlyFavorites","clippingsToShow","randomSeed","filter","show","length","display","alignItems","justifyContent","height","margin","textAlign","enableMouseEvents","resistance","slideCount","index","Math","max","slideRenderer","_clippingsToShow$inde","src_Highlights_Clipping","Navigation","currentView","setCurrentView","BottomNavigation","value","onChange","event","showLabels","BottomNavigationAction","label","icon","ImportContacts_default","Settings_default","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","useStyles1","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","fontSize","iconVariant","opacity","marginRight","spacing","message","MySnackbarContentWrapper","classes","onClose","variant","other","onCloseButtonClick","Object","objectWithoutProperties","Icon","SnackbarContent","assign","clsx","aria-describedby","action","IconButton","aria-label","Close_default","useStyles","root","padding","PaperSheet","header","Paper","Typography","component","require","button","rightIcon","marginBottom","marginLeft","iconSmall","ImportSection","setSettings","setState","updateThumbnails","isShowUploadSuccessfull","Button","htmlFor","Publish_default","file","target","files","reader","FileReader","addEventListener","clippings","transformQuotes","parseClippings","result","map","_objectSpread","concat","booksTitle","bookDict","reduce","acc","_i","_arr","toConsumableArray","Set","bookTitle","computeBookList","random","sort","b","_loop","book","_Object$values","_i2","values","readAsText","SnackBar","ResetSection","resetState","DeleteForever_default","IOSSwitch","withStyles","width","switchBase","&$checked","transform","common","white","& + $track","border","&$focusVisible $thumb","thumb","track","borderRadius","grey","transition","transitions","create","checked","focusVisible","Switch","focusVisibleClassName","disableRipple","CustomizedSwitches","FormControlLabel","control","labelPlacement","alphaSort","nameA","toLowerCase","nameB","Book","ShowBooksSection","_ref2$books","ShowBooksSection_Book","bookSetting","updatedBookSetting","ShowBooksSection_objectSpread","updatedBook","defineProperty","container","ReloadApp","document","reload","Replay_default","defaultState","Settings","_ref$settings","newSettings","Settings_objectSpread","_settings$books","Settings_ImportSection","ShuffleClippings","src_Settings_ShowBooksSection","ReloadAppButton","Settings_ResetSection","factoryState","currentIndexFavorite","initialState","src_objectSpread","ls","get","reducer","nextState","args","wasFavorite","setTimeout","set","rootElement","getElementById","ReactDOM","render","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","onChangeFavoriteIndex","src_Settings_Settings","src_Highlights_Clippings","src_Navigation_0","URL","process","href","origin","fetch","response","contentType","headers","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9930607a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n     window.location.hostname === 'localhost' ||\n     // [::1] is the IPv6 localhost address.\n     window.location.hostname === '[::1]' ||\n     // 127.0.0.1/8 is considered localhost for IPv4.\n     window.location.hostname.match(\n          /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n     )\n);\n\nexport function register(config) {\n     if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n          // The URL constructor is available in all browsers that support SW.\n          const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n          if (publicUrl.origin !== window.location.origin) {\n               // Our service worker won't work if PUBLIC_URL is on a different origin\n               // from what our page is served on. This might happen if a CDN is used to\n               // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n               return;\n          }\n\n          window.addEventListener('load', () => {\n               const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n               if (isLocalhost) {\n                    // This is running on localhost. Let's check if a service worker still exists or not.\n                    checkValidServiceWorker(swUrl, config);\n\n                    // Add some additional logging to localhost, pointing developers to the\n                    // service worker/PWA documentation.\n                    navigator.serviceWorker.ready.then(() => {\n                         console.log(\n                              'This web app is being served cache-first by a service ' +\n                              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                         );\n                    });\n               } else {\n                    // Is not localhost. Just register service worker\n                    registerValidSW(swUrl, config);\n               }\n          });\n     }\n}\n\nfunction registerValidSW(swUrl, config) {\n     navigator.serviceWorker\n          .register(swUrl)\n          .then(registration => {\n               registration.onupdatefound = () => {\n                    const installingWorker = registration.installing;\n                    if (installingWorker == null) {\n                         return;\n                    }\n                    installingWorker.onstatechange = () => {\n                         if (installingWorker.state === 'installed') {\n                              if (navigator.serviceWorker.controller) {\n                                   // At this point, the updated precached content has been fetched,\n                                   // but the previous service worker will still serve the older\n                                   // content until all client tabs are closed.\n                                   console.log(\n                                        'New content is available and will be used when all ' +\n                                        'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                                   );\n\n                                   // Execute callback\n                                   if (config && config.onUpdate) {\n                                        config.onUpdate(registration);\n                                   }\n                              } else {\n                                   // At this point, everything has been precached.\n                                   // It's the perfect time to display a\n                                   // \"Content is cached for offline use.\" message.\n                                   console.log('Content is cached for offline use.');\n\n                                   // Execute callback\n                                   if (config && config.onSuccess) {\n                                        config.onSuccess(registration);\n                                   }\n                              }\n                         }\n                    };\n               };\n          })\n          .catch(error => {\n               console.error('Error during service worker registration:', error);\n          });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n     // Check if the service worker can be found. If it can't reload the page.\n     fetch(swUrl)\n          .then(response => {\n               // Ensure service worker exists, and that we really are getting a JS file.\n               const contentType = response.headers.get('content-type');\n               if (\n                    response.status === 404 ||\n                    (contentType != null && contentType.indexOf('javascript') === -1)\n               ) {\n                    // No service worker found. Probably a different app. Reload the page.\n                    navigator.serviceWorker.ready.then(registration => {\n                         registration.unregister().then(() => {\n                              window.location.reload();\n                         });\n                    });\n               } else {\n                    // Service worker found. Proceed as normal.\n                    registerValidSW(swUrl, config);\n               }\n          })\n          .catch(() => {\n               console.log(\n                    'No internet connection found. App is running in offline mode.'\n               );\n          });\n}\n\nexport function unregister() {\n     if ('serviceWorker' in navigator) {\n          navigator.serviceWorker.ready.then(registration => {\n               registration.unregister();\n          });\n     }\n}","import books from \"google-books-search\";\nimport Bottleneck from \"bottleneck\";\nconst limiter = new Bottleneck({\n  minTime: 500\n});\nconst options = {\n  // key: \"YOUR API KEY\",\n  // field: 'title',\n  // offset: 0,\n  limit: 1,\n  type: \"books\"\n  // order: 'relevance',\n  // lang: 'en'\n};\n\nconst alreadySearched = {};\n\nexport const downloadThumbnail = (thumbnails, title, author, callback) => {\n  const key = title + \"->\" + author;\n  if (alreadySearched[key] || thumbnails[key]) {\n    return;\n  }\n  alreadySearched[key] = true;\n  console.log(\"Searching for \" + key);\n\n  limiter.submit(books.search, title + \" \" + author, options, function(\n    error,\n    results\n  ) {\n    if (!error) {\n      // console.log(results);\n      callback(results[0].thumbnail);\n    } else {\n      //console.log(error);\n    }\n  });\n};\n","import React from \"react\";\nimport { downloadThumbnail } from \"./thumbnail-downloader\";\n\nimport \"./Thumbnail.scss\";\n\nconst EmptyThumbnail = () => <div className=\"emptyThumbnail\" />;\n\nconst Thumbnail = ({ title, author, thumbnailUrl }) => {\n  if (!thumbnailUrl) {\n    return <EmptyThumbnail />;\n  }\n  return <img className=\"thumbnail\" alt=\"thumb\" src={thumbnailUrl} />;\n};\n\nexport default Thumbnail;\n","import React, { Component } from \"react\";\nimport Thumbnail from \"./Thumbnail\";\nimport \"./Clipping.scss\";\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nconst Card = ({ children }) => <div className=\"clipping\">{children}</div>;\nconst Header = ({ children }) => <div className=\"header\">{children}</div>;\nconst Title = ({ children }) => <span className=\"title\">{children}</span>;\nconst Favorite = ({ children, active, onClick }) => <span onClick={onClick} className=\"favorite\">\n  {active ? <FavoriteIcon style={{ color: 'darkred' }} /> :\n    <FavoriteBorderIcon style={{ color: 'darkred' }} />\n  }\n</span>;\nconst Author = ({ children }) => <span className=\"author\">by {children}</span>;\n\nconst Separator = () => <div className=\"separator\" />;\n\nconst Content = ({ children }) => <div className=\"content\">{children}</div>;\nconst Location = ({ children }) => (\n  <span className=\"location\">(Location {children})</span>\n);\n\nclass Clipping extends Component {\n  shouldComponentUpdate(nextProps) {\n    return !(\n      nextProps.id === this.props.id &&\n      nextProps.showThumbnail === this.props.showThumbnail\n    );\n  }\n\n  render() {\n    const {\n      id,\n      thumbnailUrl,\n      showThumbnail,\n      title,\n      authors,\n      content,\n      loc,\n      toggleFavorite,\n      isInFavorite,\n    } = this.props;\n    return (\n      <Card>\n        <Header>\n          <Thumbnail\n            thumbnailUrl={thumbnailUrl}\n            title={title}\n            author={authors[0]}\n          />\n          <Title>\n            {title}\n            <Author>{authors[0]}</Author>\n          </Title>\n          <Favorite active={isInFavorite} onClick={(() => toggleFavorite(id))} />\n          <Separator />\n        </Header>\n        <Content>\n          {content}\n          <Location>{loc.split(\"-\")[0]}</Location>\n        </Content>\n      </Card>\n    );\n  }\n}\nexport default Clipping;\n","import React, { Fragment } from \"react\";\nimport Clipping from \"./Clipping\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { virtualize } from 'react-swipeable-views-utils';\nimport \"./Clippings.scss\";\n\nconst VirtualizeSwipeableViews = virtualize(SwipeableViews);\n\nconst Clippings = ({\n  thumbnails,\n  currentIndex,\n  randomClippings,\n  onChangeIndex,\n  settings,\n  toggleFavorite,\n  favorites,\n  showOnlyFavorites\n}) => {\n  const { books, randomSeed = 0 } = settings;\n  const favoriteFilter = ({ id }) => {\n    return !!favorites[id];\n  }\n  const clippingsToShow = randomClippings.filter(\n    ({ title }) => books[title].show\n  ).filter(showOnlyFavorites ? favoriteFilter : () => true)\n\n\n  if (clippingsToShow.length === 0) {\n    return <div style={{\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%',\n\n    }}>\n      <div style={{\n        margin: 100,\n        textAlign: 'center'\n      }}>\n        Aucun surlignements trouvés, allez dans la section réglages pour en importer\n        </div></div >\n  }\n\n  const slideRenderer = ({ key, index }) => {\n    if (index < 0 || index > clippingsToShow.length - 1) {\n      return null\n    }\n    const { title, authors, content, loc, id } = clippingsToShow[index];\n    return (\n      <Clipping\n        id={id}\n        key={id}\n        thumbnailUrl={thumbnails[title + \"->\" + authors[0]]}\n        title={title}\n        authors={authors}\n        content={content}\n        loc={loc}\n        toggleFavorite={toggleFavorite}\n        isInFavorite={favorites[id]}\n      />\n    )\n  };\n  return (\n    <VirtualizeSwipeableViews\n      enableMouseEvents\n      resistance\n      slideCount={clippingsToShow.length}\n      onChangeIndex={onChangeIndex}\n      index={Math.max(0, currentIndex)}\n      slideRenderer={slideRenderer}\n    />\n  );\n};\nexport default Clippings;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport ImportContactsIcon from \"@material-ui/icons/ImportContacts\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\n\nimport \"./Navigation.scss\";\n\nconst Navigation = ({ currentView, setCurrentView }) => (\n  <BottomNavigation\n    value={currentView}\n    onChange={(event, currentView) => {\n      setCurrentView(currentView);\n    }}\n    showLabels\n    className=\"navigation\"\n  >\n    <BottomNavigationAction\n      label=\"Surlignements\"\n      icon={<ImportContactsIcon />}\n      value=\"highlights\"\n    />\n    <BottomNavigationAction\n      label=\"Favoris\"\n      value=\"favorites\"\n      icon={<FavoriteIcon />}\n    />\n    <BottomNavigationAction\n      label=\"Réglages\"\n      value=\"settings\"\n      icon={<SettingsIcon />}\n    />\n  </BottomNavigation>\n);\n\nexport default Navigation;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport Button from \"@material-ui/core/Button\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { amber, green } from \"@material-ui/core/colors\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nconst useStyles1 = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n}));\n\nfunction MySnackbarContentWrapper(props) {\n  const classes = useStyles1();\n  const {\n    className,\n    message,\n    onClose,\n    variant,\n    onCloseButtonClick,\n    ...other\n  } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"close\"\n          color=\"inherit\"\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf([\"error\", \"info\", \"success\", \"warning\"]).isRequired\n};\n\nexport default MySnackbarContentWrapper;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n    margin: theme.spacing(1)\n  }\n}));\n\nexport default function PaperSheet({ header, children }) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Paper className={classes.root}>\n        <Typography variant=\"h5\" component=\"h3\">\n          {header}\n        </Typography>\n        <Typography component=\"div\">{children}</Typography>\n      </Paper>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { parseClippings } from \"./clipping-parser\";\nimport \"./Settings.scss\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snackbar from \"../Elements/SnackBar\";\nimport Section from \"./Section\";\nimport { downloadThumbnail } from \"../Highlights/thumbnail-downloader\";\n\nconst uuidv1 = require('uuid/v1');\n\nconst shuffleArray = arr =>\n  arr\n    .map(a => [Math.random(), a])\n    .sort((a, b) => a[0] - b[0])\n    .map(a => a[1]);\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  rightIcon: {\n    marginBottom: -7,\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst defaultState = {\n  isShowUploadSuccessfull: false\n};\n\nconst ImportSection = ({\n  setSettings,\n  setState,\n  settings,\n  thumbnails,\n  updateThumbnails\n}) => {\n  const { isShowUploadSuccessfull } = settings;\n  const hideUploadSuccessFullMessage = () =>\n    setState({ settings: { ...settings, isShowUploadSuccessfull: false } });\n  console.log({ isShowUploadSuccessfull });\n\n  const classes = useStyles();\n\n  const computeBookList = clippings => {\n    var booksTitle = clippings.map(({ title }) => title);\n    var bookDict = clippings.reduce((acc, { title, authors }) => {\n      acc[title] = { title, author: authors[0] };\n      return acc;\n    }, {});\n\n    const books = {};\n    for (let bookTitle of [...new Set(booksTitle)]) {\n      books[bookTitle] = {\n        title: bookTitle,\n        author: bookDict[bookTitle].author,\n        show: true\n      };\n    }\n    return books;\n  };\n\n  const onFileUpload = event => {\n    var files = event.target.files;\n    var file = files[0];\n    var reader = new FileReader();\n    reader.addEventListener(\"load\", function (event) {\n      var text = event.target.result;\n      const clippings = parseClippings(text).map(\n        ({title, author, loc, ...clipping}) => ({ title, author, loc, ...clipping, id: `${title}.${loc}` })\n        );\n      const books = computeBookList(clippings);\n      const randomClippings = shuffleArray(clippings);\n\n      setState({\n        clippings,\n        randomClippings,\n        settings: {\n          ...settings,\n          books,\n          isShowUploadSuccessfull: true\n        },\n        currentIndex: 0\n      });\n\n      // Download all thumbnails\n      for (let book of Object.values(books)) {\n        const { title, author } = book;\n        const key = title + \"->\" + author;\n        downloadThumbnail(thumbnails, title, author, thumbnailUrl => {\n          updateThumbnails(key, thumbnailUrl);\n        });\n      }\n    });\n    reader.readAsText(file);\n  };\n  return (\n    <Section header=\"Import des Clippings\">\n      <form>\n        <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n          <label htmlFor=\"fileupload\">\n            Charger le fichier \"My Clippings.txt\"\n            <PublishIcon className={classes.rightIcon} />\n          </label>\n        </Button>\n\n        <input\n          className=\"inputFile\"\n          id=\"fileupload\"\n          type=\"file\"\n          onChange={onFileUpload}\n        />\n      </form>\n      {isShowUploadSuccessfull && (\n        <Snackbar\n          variant=\"success\"\n          className={classes.margin}\n          message=\"Import réussi !\"\n          onClose={hideUploadSuccessFullMessage}\n        />\n      )}\n    </Section>\n  );\n};\nexport default ImportSection;\n","import transformQuotes from \"@fabien88/kindlequotes\";\n\nexport const fetchClippings = callback => {\n  fetch(\"/My Clippings.txt\")\n    //.then(r => r.text())\n    .then(response => response.arrayBuffer())\n    .then(buffer => {\n      let decoder = new TextDecoder(\"utf-8\");\n      let text = decoder.decode(buffer);\n      console.log({ text });\n      const quotes = transformQuotes(text, \"fr\");\n      callback(quotes);\n      console.log(quotes);\n    });\n};\n\n\nexport const parseClippings = (clippings) => {\n  const quotes = transformQuotes(clippings, \"fr\");\n  return quotes;\n}","import React, { useState } from \"react\";\n\nimport \"./Settings.scss\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Section from \"./Section\";\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst ResetSection = ({ resetState }) => {\n  const classes = useStyles();\n\n  return (\n    <Section header=\"Réinitialiser l'application\">\n      <Button\n        onClick={resetState}\n        variant=\"contained\"\n        color=\"secondary\"\n        className={classes.button}\n      >\n        Réinitialiser tous les réglages\n        <DeleteForeverIcon className={classes.rightIcon} />\n      </Button>\n    </Section>\n  );\n};\nexport default ResetSection;\n","import React from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst IOSSwitch = withStyles(theme => ({\n  root: {\n    width: 42,\n    height: 29,\n    padding: 0,\n    margin: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(16px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#52d869\",\n        opacity: 1,\n        border: \"none\",\n        height: 26\n      }\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#52d869\",\n      border: \"6px solid #fff\"\n    }\n  },\n  thumb: {\n    width: 24,\n    height: 24\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    height: 25,\n    transition: theme.transitions.create([\"background-color\", \"border\"])\n  },\n  checked: {},\n  focusVisible: {}\n}))(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked\n      }}\n      {...props}\n    />\n  );\n});\n\nconst useStyles = makeStyles(theme => ({\n  label: {\n    width: \"100%\"\n  }\n}));\n\nexport default function CustomizedSwitches({ checked, onChange, label }) {\n  const classes = useStyles();\n  return (\n    <FormControlLabel\n      style={{ width: \"100%\" }}\n      control={\n        <IOSSwitch\n          checked={checked}\n          onChange={() => onChange(!checked)}\n          value=\"checkedB\"\n        />\n      }\n      labelPlacement=\"start\"\n      label={label}\n      classes={{\n        label: classes.label\n      }}\n    />\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { parseClippings } from \"./clipping-parser\";\nimport \"./Settings.scss\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"../Elements/Switch\";\nimport Section from \"./Section\";\nimport Thumbnail from \"../Highlights/Thumbnail\";\n\nimport \"./ShowBooksSection.scss\";\nconst alphaSort = (a, b) => {\n  var nameA = a.title.toLowerCase(),\n    nameB = b.title.toLowerCase();\n  if (nameA < nameB)\n    //sort string ascending\n    return -1;\n  if (nameA > nameB) return 1;\n  return 0; //default return value (no sorting)\n};\n\nconst Book = ({ title, author, thumbnailUrl }) => {\n  return (\n    <div>\n      <Thumbnail title={title} author={author} thumbnailUrl={thumbnailUrl} />\n      <div className=\"title\">{title}</div>\n    </div>\n  );\n};\n\nconst ShowBooksSection = ({ books = {}, setSettings, thumbnails }) => {\n  const onChange = (title, bookSetting) => show => {\n    const updatedBookSetting = { ...bookSetting, show };\n    const updatedBook = { [title]: updatedBookSetting };\n    setSettings({ books: { ...books, ...updatedBook } });\n  };\n  return (\n    <Section header=\"Livres affichés\">\n      {Object.values(books)\n        .sort(alphaSort)\n        .map(book => (\n          <Switch\n            key={book.title}\n            checked={book.show}\n            label={\n              <Book\n                title={book.title}\n                author={book.author}\n                thumbnailUrl={thumbnails[book.title + \"->\" + book.author]}\n              />\n            }\n            onChange={onChange(book.title, book)}\n          />\n        ))}\n    </Section>\n  );\n};\nexport default ShowBooksSection;\n","import React, { useState } from \"react\";\n\nimport { parseClippings } from \"./clipping-parser\";\nimport \"./Settings.scss\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snackbar from \"../Elements/SnackBar\";\nimport Section from \"./Section\";\nimport { downloadThumbnail } from \"../Highlights/thumbnail-downloader\";\n\nconst shuffleArray = arr =>\n  arr\n    .map(a => [Math.random(), a])\n    .sort((a, b) => a[0] - b[0])\n    .map(a => a[1]);\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  rightIcon: {\n    marginBottom: -7,\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst defaultState = {\n  isShowUploadSuccessfull: false\n};\n\nconst ImportSection = ({ clippings, setState }) => {\n  const classes = useStyles();\n\n  const shuffleClippings = event => {\n    const randomClippings = shuffleArray(clippings);\n\n    setState({\n      randomClippings,\n      currentIndex: 0,\n      currentView: \"highlights\"\n    });\n  };\n  return (\n    <Section header=\"Surlignements aléatoires\">\n      <Button\n        onClick={shuffleClippings}\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n      >\n        Voir les surlignements en aléatoire\n      </Button>\n    </Section>\n  );\n};\nexport default ImportSection;\n","import React, { useState } from \"react\";\n\nimport { parseClippings } from \"./clipping-parser\";\nimport \"./Settings.scss\";\nimport Button from \"@material-ui/core/Button\";\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snackbar from \"../Elements/SnackBar\";\nimport Section from \"./Section\";\nimport { downloadThumbnail } from \"../Highlights/thumbnail-downloader\";\n\nconst shuffleArray = arr =>\n     arr\n          .map(a => [Math.random(), a])\n          .sort((a, b) => a[0] - b[0])\n          .map(a => a[1]);\n\nconst useStyles = makeStyles(theme => ({\n     container: {\n          display: 'flex',\n          justifyContent: 'center',\n     },\n     button: {\n          margin: theme.spacing(1)\n     },\n     rightIcon: {\n          marginBottom: -7,\n          marginLeft: theme.spacing(1)\n     },\n     iconSmall: {\n          fontSize: 20\n     },\n     margin: {\n          margin: theme.spacing(1)\n     }\n}));\n\nconst defaultState = {\n     isShowUploadSuccessfull: false\n};\n\nconst ReloadApp = ({ clippings, setState }) => {\n     const classes = useStyles();\n\n     const shuffleClippings = event => {\n          const randomClippings = shuffleArray(clippings);\n\n          setState({\n               randomClippings,\n               currentIndex: 0,\n               currentView: \"highlights\"\n          });\n     };\n     return (\n          <div className={classes.container}>\n\n\n               <Button\n                    onClick={() => document.location.reload(true)}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n               >\n                    Recharger l'application\n          <ReplayIcon className={classes.rightIcon} />\n\n               </Button>\n          </div>\n     );\n};\nexport default ReloadApp;\n","import React from \"react\";\n\nimport \"./Settings.scss\";\nimport ImportSection from \"./ImportSection\";\nimport ResetSection from \"./ResetSection\";\nimport ShowBooksSection from \"./ShowBooksSection\";\nimport ShuffleClippings from \"./ShuffleClippings\";\nimport { downloadThumbnail } from \"../Highlights/thumbnail-downloader\";\nimport ReloadAppButton from './ReloadAppButton';\nconst versionNumber = \"1.0.8\";\n\nconst defaultState = {\n  isShowUploadSuccessfull: false\n};\n\nconst Settings = ({\n  setState,\n  resetState,\n  settings = defaultState,\n  thumbnails,\n  updateThumbnails,\n  clippings\n}) => {\n  const setSettings = newSettings => {\n    setState({ settings: { ...settings, ...newSettings } });\n  };\n  const { books = {} } = settings;\n  // Download all thumbnails\n  for (let book of Object.values(books)) {\n    const { title, author } = book;\n    const key = title + \"->\" + author;\n    downloadThumbnail(thumbnails, title, author, thumbnailUrl => {\n      updateThumbnails(key, thumbnailUrl);\n    });\n  }\n  return (\n    <div className=\"settings\">\n      <h1>Réglages</h1>\n      <ImportSection\n        settings={settings}\n        setState={setState}\n        setSettings={setSettings}\n        updateThumbnails={updateThumbnails}\n        thumbnails={thumbnails}\n      />\n      <ShuffleClippings clippings={clippings} setState={setState} />\n      <ShowBooksSection\n        books={books}\n        setSettings={setSettings}\n        thumbnails={thumbnails}\n      />\n      <ReloadAppButton />\n      <ResetSection resetState={resetState} />\n\n      <div>\n        version {versionNumber}\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React, { useReducer } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ls from \"local-storage\";\nimport * as serviceWorker from './serviceWorker';\n\nimport \"./styles.scss\";\nimport Clippings from \"./Highlights/Clippings\";\nimport Navigation from \"./Navigation\";\nimport Settings from \"./Settings/Settings\";\n// const runtime = require('offline-plugin/runtime');\n// runtime.install({\n//   onUpdating: () => {\n//     console.log('SW Event:', 'onUpdating');\n//   },\n//   onUpdateReady: () => {\n//     console.log('SW Event:', 'onUpdateReady');\n//     // Tells to new SW to take control immediately\n//     runtime.applyUpdate();\n//   },\n//   onUpdated: () => {\n//     console.log('SW Event:', 'onUpdated');\n//     // Reload the webpage to load into the new version\n//     window.location.reload();\n//   },\n//   onUpdateFailed: () => {\n//     console.log('SW Event:', 'onUpdateFailed');\n//   }\n// });\n\nconst factoryState = {\n  clippings: [],\n  randomClippings: [],\n  currentIndex: 0,\n  currentIndexFavorite: 0,\n  thumbnails: {},\n  currentView: \"highlights\",\n  favorites: {},\n  settings: { books: {}, randomSeed: 0 }\n};\n\nconst initialState = {\n  ...factoryState,\n  ...ls.get(\"state\")\n};\n\nfunction reducer(state, action) {\n  let nextState = { ...state };\n  switch (action.type) {\n    case \"resetState\":\n      nextState = factoryState;\n      break;\n    case \"setState\":\n      nextState = { ...nextState, ...action.args };\n      break;\n\n    case \"toggleFavorite\":\n      const { id } = action;\n      const wasFavorite = !!nextState.favorites[id];\n      const favorites = {\n        ...nextState.favorites, [id]: !wasFavorite\n      }\n      console.log({ favorites })\n      nextState = { ...nextState, favorites };\n      break;\n\n    case \"setThumbnail\":\n      nextState = {\n        ...nextState,\n        thumbnails: { ...state.thumbnails, [action.key]: action.thumbnailUrl }\n      };\n      break;\n    default:\n    // console.log({ nextState });\n  }\n  setTimeout(() => ls.set(\"state\", nextState), 500);\n  return nextState;\n}\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const {\n    clippings,\n    randomClippings,\n    currentIndex,\n    thumbnails,\n    currentView,\n    currentIndexFavorite,\n    favorites\n  } = state;\n  const setState = args => {\n    dispatch({ type: \"setState\", args });\n  };\n\n  const toggleFavorite = (id) => {\n    dispatch({ type: \"toggleFavorite\", id });\n  }\n  const onChangeIndex = currentIndex => {\n    console.log({ currentIndex })\n    setState({ currentIndex });\n  };\n  const onChangeFavoriteIndex = currentIndexFavorite => {\n    setState({ currentIndexFavorite });\n  };\n\n  const resetState = () => {\n    console.log(\"state reset\");\n    dispatch({ type: \"resetState\" });\n  };\n  const updateThumbnails = (key, thumbnailUrl) => {\n    dispatch({ type: \"setThumbnail\", key, thumbnailUrl });\n  };\n\n  const View = () => {\n    switch (currentView) {\n      case \"settings\":\n        return (\n          <Settings\n            setState={setState}\n            resetState={resetState}\n            settings={state.settings}\n            clippings={state.clippings}\n            thumbnails={thumbnails}\n            updateThumbnails={updateThumbnails}\n            clippings={clippings}\n          />\n        );\n\n      case \"highlights\":\n        return (\n          <Clippings\n            thumbnails={thumbnails}\n            randomClippings={randomClippings}\n            currentIndex={currentIndex}\n            updateThumbnails={updateThumbnails}\n            onChangeIndex={onChangeIndex}\n            settings={state.settings}\n            favorites={favorites}\n            toggleFavorite={toggleFavorite}\n          />\n        );\n      case \"favorites\":\n        return (\n          <Clippings\n            thumbnails={thumbnails}\n            randomClippings={randomClippings}\n            currentIndex={currentIndexFavorite}\n            updateThumbnails={updateThumbnails}\n            onChangeIndex={onChangeFavoriteIndex}\n            settings={state.settings}\n            favorites={favorites}\n            toggleFavorite={toggleFavorite}\n            showOnlyFavorites\n          />\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {/* <Banner onFileUpload={onFileUpload} /> */}\n      <div className=\"view\">\n        <View />\n      </div>\n      <Navigation\n        currentView={currentView}\n        setCurrentView={currentView => setState({ currentView })}\n      />\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\nserviceWorker.register();\n"],"sourceRoot":""}